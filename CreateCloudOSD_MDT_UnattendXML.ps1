<# GARY BLOK - @GWBLOK - Recast Software
This Script will: 
Pre-populate the Unattend that is automatically generated by ConfigMgr's OSD "Apply OS Image" Step.
 - Add Command to support OSDCloud
Create TS Variables required for the following steps to still work without the "Apply OS Image" Step
 - Apply Windows Settings
 - Apply Network Settings
 - Setup Windows and Configuration Manager
 
TS Variables Created:
 - OSArchitecture
 - OSDAnswerFilePath
 - OSDInstallType
 - OSDTargetSystemRoot
 - OSVersionNumber
 - OSDTargetSystemDrive
 - OSDTargetSystemPartition
 

UPDATED 22.22.03 - Used with MDT instead of CM.. probably has stuff in it that MDT doesn't need.. but oh well.
#>
#region: CMTraceLog Function formats logging in CMTrace style
Function Write-CMTraceLog {
         [CmdletBinding()]
    Param (
		    [Parameter(Mandatory=$false)]
		    $Message,
 
		    [Parameter(Mandatory=$false)]
		    $ErrorMessage,
 
		    [Parameter(Mandatory=$false)]
		    $Component = "CloudOSD",
 
		    [Parameter(Mandatory=$false)]
		    [int]$Type,
		
		    [Parameter(Mandatory=$false)]
		    $LogFile = "$LogFolder\CloudOSD.log"
	    )
    <#
    Type: 1 = Normal, 2 = Warning (yellow), 3 = Error (red)
    #>
	    $Time = Get-Date -Format "HH:mm:ss.ffffff"
	    $Date = Get-Date -Format "MM-dd-yyyy"
 
	    if ($ErrorMessage -ne $null) {$Type = 3}
	    if ($Component -eq $null) {$Component = " "}
	    if ($Type -eq $null) {$Type = 1}
 
	    $LogMessage = "<![LOG[$Message $ErrorMessage" + "]LOG]!><time=`"$Time`" date=`"$Date`" component=`"$Component`" context=`"`" type=`"$Type`" thread=`"`" file=`"`">"
	    $LogMessage | Out-File -Append -Encoding UTF8 -FilePath $LogFile
    }

# Configuration ##################################################################

try {
$tsenv = new-object -comobject Microsoft.SMS.TSEnvironment
$SMSTSLogsPath = $tsenv.value('_SMSTSLogPath')
$LogFolder = $tsenv.value('LogFolder')
if (!($LogFolder)){$LogFolder = $SMSTSLogsPath}
    }
catch{
Write-Output "Not in TS"
if (!($LogFolder)){$LogFolder = $env:TEMP}
    }
if (!(Test-Path -path $LogFolder)){$Null = new-item -Path $LogFolder -ItemType Directory -Force}

$ScriptVer = "2022.02.22.1"
$Component = "Unattend"
$LogFile = "$LogFolder\CloudOSD.log"

Write-Output "Starting script to create unattend file & create TS Varaibles"
Write-CMTraceLog -Message "=====================================================" -Type 1
Write-CMTraceLog -Message "TS Variables & Unattend.XML creation: Script version $ScriptVer..." -Type 1
Write-CMTraceLog -Message "=====================================================" -Type 1
Write-CMTraceLog -Message "Running Script as $env:USERNAME" -Type 1 


if ($tsenv){
Write-Output "Creating OSArchitecture | Set to X64"
Write-CMTraceLog -Message "Creating OSArchitecture | Set to X64" -Type 1 
$tsenv.value('OSArchitecture') = "X64"

Write-Output "Creating OSDAnswerFilePath | Set to C:\WINDOWS\panther\unattend\unattend.xml"
Write-CMTraceLog -Message "Creating OSDAnswerFilePath | Set to C:\WINDOWS\panther\unattend\unattend.xml" -Type 1
$tsenv.value('OSDAnswerFilePath') = "C:\WINDOWS\panther\unattend\unattend.xml"

Write-Output "Creating OSDInstallType | Set to Sysprep"
Write-CMTraceLog -Message "Creating OSDInstallType | Set to Sysprep" -Type 1
$tsenv.value('OSDInstallType') = "Sysprep"

Write-Output "Creating OSDTargetSystemRoot | Set to C:\WINDOWS"
Write-CMTraceLog -Message "Creating OSDTargetSystemRoot | Set to C:\WINDOWS" -Type 1
$tsenv.value('OSDTargetSystemRoot') = "C:\WINDOWS"

Write-Output "Creating OSVersionNumber | Set to 10.0"
Write-CMTraceLog -Message "Creating OSVersionNumber | Set to 10.0" -Type 1 
$tsenv.value('OSVersionNumber') = "10.0"

Write-Output "Creating OSDTargetSystemDrive | Set to C:"
Write-CMTraceLog -Message "Creating OSDTargetSystemDrive | Set to C:" -Type 1 
$tsenv.value('OSDTargetSystemDrive') = "C:"

Write-Output "Creating OSDTargetSystemPartition | Set to 0-3"
Write-CMTraceLog -Message "Creating OSDTargetSystemPartition | Set to 0-3" -Type 1 
$tsenv.value('OSDTargetSystemPartition') = "0-3" #Assume Disk 0, 3rd Partition, which is MS Standard, which OSDCloud Format Process follows. 


if ($tsenv.value('OSDComputerName') -ne $Null){
    Write-Output "Creating Computer Name to inject into XML"
    Write-CMTraceLog -Message "Creating Computer Name to inject into XML" -Type 1 
    $ComputerName = $tsenv.value('OSDComputerName')}
    
}


$ComputerName = $OSDComputerName

#Default ConfigMgr XML auto generated by CM OSD's Apply OS Image Step
[XML]$xmldoc = @"
<?xml version="1.0" encoding="utf-8"?>
<unattend xmlns="urn:schemas-microsoft-com:unattend">
	<settings pass="windowsPE">
		<component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
			<ImageInstall>
				<OSImage>
					<WillShowUI>OnError</WillShowUI>
					<InstallTo>
						<DiskID>0</DiskID>
						<PartitionID>2</PartitionID>
					</InstallTo>
				</OSImage>
			</ImageInstall>
			<ComplianceCheck>
				<DisplayReport>OnError</DisplayReport>
			</ComplianceCheck>
			<UserData>
				<AcceptEula>true</AcceptEula>
			</UserData>
		</component>
		<component name="Microsoft-Windows-International-Core-WinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<SetupUILanguage>
				<UILanguage>en-US</UILanguage>
			</SetupUILanguage>
			<InputLocale>0409:00000409</InputLocale>
			<SystemLocale>en-US</SystemLocale>
			<UILanguage>en-US</UILanguage>
			<UserLocale>en-US</UserLocale>
		</component>
	</settings>
	<settings pass="generalize">
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<DoNotCleanTaskBar>true</DoNotCleanTaskBar>
		</component>
	</settings>
	<settings pass="specialize">
		<component name="Microsoft-Windows-UnattendedJoin" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
			<Identification>
				<JoinWorkgroup>WORKGROUP</JoinWorkgroup>
			</Identification>
		</component>
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
			<ComputerName>$ComputerName</ComputerName>
			<RegisteredOrganization>Home</RegisteredOrganization>
			<RegisteredOwner>Owner</RegisteredOwner>
			<DoNotCleanTaskBar>true</DoNotCleanTaskBar>
			<TimeZone>Central Standard Time</TimeZone>
		</component>
		<component name="Microsoft-Windows-IE-InternetExplorer" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<Home_Page>about:blank</Home_Page>
		</component>
		<component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<RunSynchronous>
				<RunSynchronousCommand wcm:action="add">
					<Description>EnableAdmin</Description>
					<Order>1</Order>
					<Path>cmd /c net user Administrator /active:yes</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Description>UnfilterAdministratorToken</Description>
					<Order>2</Order>
					<Path>cmd /c reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v FilterAdministratorToken /t REG_DWORD /d 0 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Description>disable user account page</Description>
					<Order>3</Order>
					<Path>reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Setup\OOBE /v UnattendCreatedUser /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Description>disable async RunOnce</Description>
					<Order>4</Order>
					<Path>reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer /v AsyncRunOnce /t REG_DWORD /d 0 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand><Order>5</Order>
					<Description>OSDCloud Specialize</Description>
					<Path>PowerShell.exe -ExecutionPolicy Bypass -Command Invoke-OSDSpecialize</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
		<component name="Microsoft-Windows-International-Core" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<InputLocale>en-us;0409:00000409</InputLocale>
			<SystemLocale>en-us</SystemLocale>
			<UILanguage>en-us</UILanguage>
			<UserLocale>en-us</UserLocale>
		</component>
		<component name="Microsoft-Windows-TapiSetup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<TapiConfigured>0</TapiConfigured>
			<TapiUnattendLocation>
				<AreaCode>""</AreaCode>
				<CountryOrRegion>1</CountryOrRegion>
				<LongDistanceAccess>9</LongDistanceAccess>
				<OutsideAccess>9</OutsideAccess>
				<PulseOrToneDialing>1</PulseOrToneDialing>
				<DisableCallWaiting>""</DisableCallWaiting>
				<InternationalCarrierCode>""</InternationalCarrierCode>
				<LongDistanceCarrierCode>""</LongDistanceCarrierCode>
				<Name>Default</Name>
			</TapiUnattendLocation>
		</component>
		<component name="Microsoft-Windows-SystemRestore-Main" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<DisableSR>1</DisableSR>
		</component>
	</settings>
	<settings pass="oobeSystem">
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
			<UserAccounts>
				<AdministratorPassword>
					<Value>P@ssw0rd</Value>
					<PlainText>true</PlainText>
				</AdministratorPassword>
			</UserAccounts>
			<AutoLogon>
				<Enabled>true</Enabled>
				<Username>Administrator</Username>
				<Domain>.</Domain>
				<Password>
					<Value>P@ssw0rd</Value>
					<PlainText>true</PlainText>
				</Password>
				<LogonCount>999</LogonCount>
			</AutoLogon>
			<Display>
			</Display>
			<FirstLogonCommands>
				<SynchronousCommand wcm:action="add">
					<CommandLine>wscript.exe %SystemDrive%\MININT\Scripts\LTIBootstrap.vbs</CommandLine>
					<Description>Lite Touch new OS</Description>
					<Order>1</Order>
				</SynchronousCommand>
			</FirstLogonCommands>
			<OOBE>
				<HideEULAPage>true</HideEULAPage>
				<NetworkLocation>Work</NetworkLocation>
				<ProtectYourPC>1</ProtectYourPC>
				<HideLocalAccountScreen>true</HideLocalAccountScreen>
				<HideOnlineAccountScreens>true</HideOnlineAccountScreens>
				<HideWirelessSetupInOOBE>true</HideWirelessSetupInOOBE>
			</OOBE>
			<RegisteredOrganization>Home</RegisteredOrganization>
			<RegisteredOwner>Owner</RegisteredOwner>
			<TimeZone>Central Standard Time</TimeZone>
		</component>
		<component name="Microsoft-Windows-International-Core" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<InputLocale>en-us;0409:00000409</InputLocale>
			<SystemLocale>en-us</SystemLocale>
			<UILanguage>en-us</UILanguage>
			<UserLocale>en-us</UserLocale>
		</component>
	</settings>
	<settings pass="offlineServicing">
		<component name="Microsoft-Windows-PnpCustomizationsNonWinPE" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS" xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			<DriverPaths>
				<PathAndCredentials wcm:keyValue="1" wcm:action="add">
					<Path>\Drivers</Path>
				</PathAndCredentials>
			</DriverPaths>
		</component>
	</settings>
</unattend>

"@


$OSDCloudXMLPath = "C:\windows\panther\Invoke-OSDSpecialize.xml"
if (Test-Path $OSDCloudXMLPath){
    Write-Output "Removing OSDClouds $OSDCloudXMLPath file"
    Write-CMTraceLog -Message "Removing OSDClouds $OSDCloudXMLPath file" -Type 1

    Remove-Item $OSDCloudXMLPath -Force
    }

$UnattendFolderPath = "C:\WINDOWS\panther\unattend"

Write-Output "Create unattend folder: $UnattendFolderPath"
Write-CMTraceLog -Message "Create unattend folder: $UnattendFolderPath" -Type 1
$null = New-Item -ItemType directory -Path $UnattendFolderPath -Force
$xmldoc.Save("$UnattendFolderPath\unattend.tmp")
$enc = New-Object System.Text.UTF8Encoding($false)

Write-Output "Creating $UnattendFolderPath\unattend.xml"
Write-CMTraceLog -Message "Creating $UnattendFolderPath\unattend.xml" -Type 1
$wrt = New-Object System.XML.XMLTextWriter("$UnattendFolderPath\unattend.xml",$enc)
$wrt.Formatting = 'Indented'
$xmldoc.Save($wrt)
$wrt.Close()

if (Test-Path -Path "$UnattendFolderPath\unattend.xml"){
    Write-CMTraceLog -Message "Successfully Created Unattend.XML File" -Type 1
    }
